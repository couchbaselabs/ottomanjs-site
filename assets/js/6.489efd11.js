(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{363:function(t,e,a){t.exports=a.p+"assets/img/create.4d56bb71.png"},364:function(t,e,a){t.exports=a.p+"assets/img/findById.d5aabf6e.png"},374:function(t,e,a){"use strict";a.r(e);var s=a(25),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("This section is for those who want to understand how Ottoman works in depth.")]),t._v(" "),s("h2",{attrs:{id:"key-generation-layer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#key-generation-layer"}},[t._v("#")]),t._v(" Key Generation Layer")]),t._v(" "),s("p",[t._v("Ottoman provides an abstraction layer to handle the "),s("code",[t._v("keys")]),t._v(" that will be used to store/access the documents on the Database Server.")]),t._v(" "),s("p",[t._v("Developers will only have to work with the "),s("code",[t._v("document")]),t._v(" ids while ottoman handles the keys automatically for them.")]),t._v(" "),s("h2",{attrs:{id:"keygenerator-function"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#keygenerator-function"}},[t._v("#")]),t._v(" keyGenerator function")]),t._v(" "),s("p",[t._v("The default "),s("code",[t._v("keyGenerator")]),t._v(" function is used to generate all keys by Ottoman in your Couchbase datastore.")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("keyGenerator")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("metadata"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("metadata"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("modelName"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n")])])]),s("p",[t._v("Using the default "),s("code",[t._v("keyGenerator")]),t._v(" function that "),s("code",[t._v("Ottoman")]),t._v(" provides and assuming your "),s("code",[t._v("modelName")]),t._v(" is 'User', the key for your document would look like:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("User::0477024c")])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Notice")]),t._v(" "),s("p",[t._v("This resulted key is a combination of the prefix as provided by the default  "),s("code",[t._v("keyGenerator")]),t._v(" function ("),s("code",[t._v("${metadata.modelName}")]),t._v(") "),s("RouterLink",{attrs:{to:"/guides/model.html#model-id"}},[t._v("appended with an ID")]),t._v(" ("),s("code",[t._v("0477024c")]),t._v(").")],1)]),t._v(" "),s("h3",{attrs:{id:"override-keygenerator-function"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#override-keygenerator-function"}},[t._v("#")]),t._v(" Override keyGenerator function")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("keyGenerator")]),t._v(" function allows you to only override the prefix for a key, or completely remove the prefix such that the key always matches the ID of the document generated.")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("keyGenerator")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("metadata"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("metadata"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scopeName"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" User "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("model")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'User'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" schema"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" keyGenerator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" scopeName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myScope'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("In this example we are overiding the "),s("code",[t._v("keyGenerator")]),t._v(" function and replacing the "),s("code",[t._v("${metadata.modelName}")]),t._v(" with "),s("code",[t._v("${metadata.scopeName}")]),t._v(". Using this override, the key for your document would look like:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("myScope::0477024c")])])]),t._v(" "),s("p",[t._v("To understand how ID differs from keys in Ottoman we need to explore creating a model, understand how Ottoman deals with IDs which affect your key and then how to retrieve your document by ID.")]),t._v(" "),s("h3",{attrs:{id:"defining-a-model"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#defining-a-model"}},[t._v("#")]),t._v(" Defining a "),s("code",[t._v("Model")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" userSchema "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Schema")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" User "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("model")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'User'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" userSchema"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ol",[s("li",[t._v("Set your rules in the "),s("code",[t._v("Schema")]),t._v(".")]),t._v(" "),s("li",[t._v("Now you can create your "),s("code",[t._v("Model")]),t._v(" with the "),s("code",[t._v("Schema")]),t._v(" defined.")])]),t._v(" "),s("h3",{attrs:{id:"creating-a-document"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-document"}},[t._v("#")]),t._v(" Creating a document")]),t._v(" "),s("p",[t._v("Let see how Ottoman handles a new document creation.")]),t._v(" "),s("p",[s("img",{attrs:{src:a(363),alt:"How to Use"}})]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Notice")]),t._v(" "),s("p",[t._v("Using "),s("code",[t._v("Ottoman")]),t._v(" you only need to think about "),s("code",[t._v("id")]),t._v(" in order to execute CRUD Operations over documents.\nAll the "),s("code",[t._v("key")]),t._v(" management will be automatically handled by "),s("code",[t._v("Ottoman")]),t._v(".")])]),t._v(" "),s("h3",{attrs:{id:"retrieving-a-document"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#retrieving-a-document"}},[t._v("#")]),t._v(" Retrieving a document")]),t._v(" "),s("p",[t._v("Ottoman provides a "),s("code",[t._v("findById")]),t._v(" method at the "),s("code",[t._v("Model")]),t._v(" level to retrieve a document by "),s("code",[t._v("id")]),t._v(". See the picture below to understand how it works.")]),t._v(" "),s("p",[s("img",{attrs:{src:a(364),alt:"How to Use"}})])])}),[],!1,null,null,null);e.default=n.exports}}]);